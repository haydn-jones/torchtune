output_dir: ./checkpoints/test
model_root: ./model/Intern-S1-mini-Qwen3-8B

# Tokenizer
tokenizer:
  _component_: torchtune.models.intern_s1.intern_s1_tokenizer
  path: ${model_root}/vocab.json
  merges_file: ${model_root}/merges.txt
  max_seq_len: null

# Dataset
dataset:
  _component_: torchtune.datasets.instruct_dataset
  source: haydn-jones/TxGemma-HPO-FDS-512-Embeddings
  packed: False  # True increases speed
  train_on_input: False
seed: null
shuffle: True

# Model Arguments
model:
  _component_: torchtune.models.intern_s1.intern_s1_mini

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: ${model_root}
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors,
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}
  model_type: QWEN3
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 64
epochs: 1
optimizer:
  _component_: bitsandbytes.optim.PagedAdamW
  lr: 5e-6
optimizer_in_bwd: True  # True saves memory. Requires gradient_accumulation_steps=1
loss:
  _component_: torchtune.modules.loss.LinearCrossEntropyLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 1  # Use to increase effective batch size
clip_grad_norm: null
compile: True  # torch.compile the model + loss, True increases speed + decreases memory

# Training environment
device: cuda

# Memory management
enable_activation_checkpointing: True  # True reduces memory
enable_activation_offloading: False  # True reduces memory

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.DiskLogger
  log_dir: ${output_dir}/logs
log_every_n_steps: 1
log_peak_memory_stats: True
log_level: INFO  # DEBUG, WARN, etc.


# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: False

  #Output directory of trace artifacts
  output_dir: ${output_dir}/profiling_outputs

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: False
  with_stack: False
  record_shapes: True
  with_flops: False

  # `torch.profiler.schedule` options:
  # wait_steps -> wait, warmup_steps -> warmup, active_steps -> active, num_cycles -> repeat
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1
